{"version":3,"sources":["components/App.tsx","components/AboutModal.tsx","components/CompactNav.tsx","components/Nav.tsx","components/SecretTyper.tsx","components/Header.tsx","components/Card.tsx","components/Secrets.tsx","components/ShareModal.tsx","index.tsx"],"names":["ModalType","AboutModal","visible","closeHandler","className","onClick","aria-label","src","width","alt","href","target","rel","CompactNav","clickHandler","useState","open","setOpen","will-change","About","Share","Nav","stickyNav","menu","useWindowWidth","window","innerWidth","setWidth","useEffect","handleResize","addEventListener","removeEventListener","secrets","SecretTyper","text","setText","isDeleting","setIsDeleting","delay","setDelay","loop","setLoop","secret","length","handleTyping","substring","setTimeout","timer","clearInterval","id","Header","setStickyNav","stickyRef","useRef","observer","IntersectionObserver","entry","isIntersecting","rootMargin","threshold","ref","current","observe","unobserve","NavProps","Card","alreadyLiked","secretId","date","likes","localStorage","getItem","toString","liked","setLiked","localLikes","setLocalLikes","shortDate","Date","split","slice","join","update","date_posted","fetch","body","JSON","stringify","headers","Headers","method","removeItem","setItem","Secrets","setSecrets","secretsPage","setSecretsPage","intersecting","setIntersecting","sentinel","s","ac","AbortController","sig","signal","then","result","json","map","key","cards","concat","catch","abort","ShareModal","setSecret","submitted","setSubmitted","onSubmit","e","content","querySelector","value","now","toISOString","preventDefault","onChange","placeholder","type","App","modalState","setModalState","setModalHandler","mode","HeaderProps","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e4e8dd70.chunk.js","sourcesContent":["import \"./App.scss\";\nimport React, { useState } from \"react\";\nimport { AboutModal } from \"./AboutModal\";\nimport { Header, IHeader } from \"./Header\";\nimport { Secrets } from \"./Secrets\";\nimport { ShareModal } from \"./ShareModal\";\n\nexport enum ModalType {\n  About,\n  Share,\n}\n\nconst App: React.FC = () => {\n  const [modalState, setModalState] = useState<ModalType | null>(null);\n\n  const setModalHandler = (mode: ModalType | null) => {\n    setModalState(mode);\n  };\n\n  const HeaderProps: IHeader = { clickHandler: setModalHandler };\n\n  return (\n    <div className=\"App\">\n      <Header {...HeaderProps} />\n      <main className=\"main\">\n        <Secrets />\n      </main>\n      <AboutModal visible={modalState === ModalType.About}\n        closeHandler={setModalHandler} />\n      <ShareModal visible={modalState === ModalType.Share}\n        closeHandler={setModalHandler} />\n      <footer className=\"footer\">\n        <p>\n        Created by\n        <a href=\"https://www.samroelants.com\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\">\n           &nbsp;Sam Roelants\n        </a>\n      </p>\n      </footer>\n    </div>\n  );\n};\n\nexport default App;\n","import './Modal.scss';\nimport React from 'react';\nimport { ModalType } from './App'\n\nexport interface IModal {\n  visible: boolean;\n  closeHandler: (t: ModalType | null) => void;\n}\n\nexport const AboutModal: React.FC<IModal> = ({ visible, closeHandler }) => {\n  return (\n    <>\n      <div className={visible ? \"about-modal modal visible\" : \"about-modal modal\"} >\n        <button className=\"modal__close\" onClick={() => {\n          closeHandler(null);\n        }}>\n        <img aria-label=\"close\"\n          src=\"assets/img/close.svg\"\n          width=\"25px\"\n          alt=\"close\" />\n        </button>\n        <div className=\"modal__title\">About Secrets</div>\n        <div className=\"modal__content\">\n          <p>\n          We all know that feeling of relief after sharing a long-kept secret\n          with someone. A weight is lifted. What seemed like a terrible or\n          embarrasing thing all of a sudden doesn't seem that important anymore.\n          Sharing secrets with people brings us perspective. We're not only\n          opening ourselves up to them, we're opening up to ourselves.\n        </p>\n\n        <p>\n          The science <a href=\"https://psycnet.apa.org/record/2017-20428-001\"\n          target=\"_blank\" rel=\"noopener noreferrer\"> has\n          long been in </a> on the benefits of sharing secrets with\n          others. Keeping secrets is a mental, emotional and physical burden.\n          Our minds keep drifting and focussing on them. We are more anxious\n          and adrenaline levels and blood pressure are above average.\n        </p>\n        <p>\n          On the flip side, sharing secrets with others has a tremendous effect\n          on us. Even if we're uncomfortable sharing with someone close to us,\n          for fear of judgement, we ofter share our deepest secrets with people\n          we're not close to, even complete strangers like a hairdresser or\n          taxi driver. Sharing secrets forms bonds of trust, they strengthen\n          social cohesion, even between strangers. Aside from benefiting us\n          emotionally and physically, sharing secrets benefits our society as a\n          hole.\n        </p>\n        <p>\n          This page is meant as a platform for people to share their secrets\n          with strangers, completely anonymously. Perhaps the person sitting\n          next to you on the bus tomorrow will know and sympathize with\n          something you haven't yet had the courage to face up to, and that is\n          an encouraging thought.\n        </p>\n        </div>\n      </div >\n      <div className=\"dimmer\"></div>\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport { ModalType } from \"./App\";\nimport \"./CompactNav.scss\";\nimport \"./Modal.scss\";\nimport \"./Nav.scss\";\n\nexport interface INav {\n  clickHandler: (t: ModalType | null) => void;\n}\nexport const CompactNav: React.FC<INav> = ({ clickHandler }) => {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <>\n      <div className={open \n        ? \"nav__hamburger nav__hamburger--open\"\n        : \"nav__hamburger\"}\n        onClick={() => setOpen(!open)}>\n        <div className=\"nav__hamburger__bar nav__hamburger__top-bar\" />\n        <div className=\"nav__hamburger__bar nav__hamburger__middle-bar\" />\n        <div className=\"nav__hamburger__bar nav__hamburger__bottom-bar\" />\n      </div>\n      <div className={open? \"sidemenu sidemenu--visible\":\"sidemenu\"} \n        will-change={true}>\n        <div className=\"nav__links\">\n          <div className=\"nav__link\" onClick={() => {\n            clickHandler(ModalType.About)\n            setOpen(!open)\n          }\n          }>\n            About\n          </div>\n            <div className=\"nav__link\" onClick={() => {clickHandler(ModalType.Share)\n            setOpen(!open)}}>\n            Share a secret\n          </div>\n        </div>\n      </div>\n\n      <div className={open? \"overlay overlay--visible\":\"overlay\"} />\n    </>\n  );\n};\n","import React, {useState, useEffect} from \"react\";\nimport { CompactNav } from \"./CompactNav\";\nimport { ModalType } from \"./App\";\nimport \"./Modal.scss\";\nimport \"./Nav.scss\";\n\nexport interface INav {\n  clickHandler: (t: ModalType | null) => void;\n  stickyNav: boolean;\n}\n\nexport const Nav: React.FC<INav> = ({ clickHandler, stickyNav }) => {\n  const windowWidth = useWindowWidth();\n\n  // Either show the menu links, or a Compact menu button revealing a side menu\n  const menu = (windowWidth <= 700) ? (\n    <>\n      <CompactNav clickHandler={clickHandler} />\n    </>\n  ) : (\n    <div className=\"nav__links\">\n      <div className=\"nav__link\" onClick={() => clickHandler(ModalType.About)}>\n        About\n      </div>\n      <div className=\"nav__link\" onClick={() => clickHandler(ModalType.Share)}>\n        Share a secret\n      </div>\n    </div>\n  );\n\n  return (\n    <nav className={(stickyNav) ? \"nav sticky-nav\" : \"nav\"}>\n      <a href=\"/\" className=\"nav__brand\">Secrets.</a>\n      {menu}\n    </nav>\n  );\n};\n\n  // useWindowWidth hook\n  const useWindowWidth = () => {\n    const [width, setWidth] = useState(window.innerWidth);\n    useEffect(() => {\n      const handleResize = () => setWidth(window.innerWidth);\n      window.addEventListener(\"resize\", handleResize);\n      return () => window.removeEventListener(\"resize\", handleResize);\n    }, []);\n    return width;\n  };\n","import React, { useEffect, useState } from 'react';\n\nconst secrets: string[] = [\n  `A month after being raped, I went and seduced my rapist.\n   I thought if it was my choice and I initiated the sex it\n   would make things better. It didn’t.`,\n  `My youth group is one of the things keeping me from killing myself.\n  I'm the youth pastor.`,\n  `Last week when I was shopping, the lady ahead of me dropped a\n   $20 bill on the ground.  Instead of saying anything, I quickly\n   stepped on it and claimed it as my own.`];\n\nexport const SecretTyper: React.FC = () => {\n  const [text, setText] = useState('');\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [delay, setDelay] = useState(50);\n  const [loop, setLoop] = useState(0);\n\n  const i: number = loop % secrets.length\n  const secret = secrets[i];\n\n  const handleTyping = () => {\n    // Change text and speed.\n    setText(\n      isDeleting\n        ? secret.substring(0, text.length - 1)\n        : secret.substring(0, text.length + 1)\n    );\n\n    // Get new delay\n    setDelay(\n      isDeleting\n        ? 20\n        : text[text.length - 1] === '.'\n          ? 400 // Pause at a period for realism.\n          : 40\n    );\n\n    // Test whether finished typing\n    if (!isDeleting && text === secret) {\n      // Pause and start deleting\n      setTimeout(() => setIsDeleting(true), 1000);\n    }\n\n    // Test whether finished deleting\n    if (isDeleting && text === \"\") {\n      // Done deleting, load new secret (by increasing loop number)\n      setIsDeleting(false);\n      setLoop(loop + 1);\n    }\n  };\n\n  useEffect(() => {\n    const timer = setTimeout(handleTyping, delay);\n    return () => clearInterval(timer)\n  });\n  return <div className=\"header__secret\"> {text} <span id=\"cursor\" /></div>\n}\n","import React, {useState, useRef, useEffect} from \"react\";\nimport { ModalType } from \"./App\";\nimport \"./Header.scss\";\nimport { INav, Nav } from \"./Nav\";\nimport { SecretTyper } from \"./SecretTyper\";\n\nexport interface IHeader {\n  clickHandler: (t: ModalType | null) => void;\n}\n\nexport const Header: React.FC<IHeader> = ({ clickHandler }) => {\n  const [stickyNav, setStickyNav] = useState(false);\n  const stickyRef = useRef(null); // Reference to observed element\n\n  // Set Sticky nav Intersection Observer\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      // If isIntersecting is false, set stickyNav to true.\n      ([entry]) => setStickyNav(!entry.isIntersecting),\n      { rootMargin: \"0px\",\n        threshold: 0.9});\n\n    const ref = stickyRef.current;\n    if (ref) {\n      observer.observe(ref);  // If ref is populated, set observer.\n\n      // Clean up: Remove the observer afterwards.\n      return () => observer.unobserve(ref);\n    }\n\n    // Clean up: remove the observer.\n  }, []);\n  const NavProps: INav = { clickHandler, stickyNav };\n  return (\n    <header className=\"header\" ref={stickyRef}>\n      <Nav {...NavProps} />\n      <div className=\"header__title\">Share your secrets with the world.</div>\n      <SecretTyper />\n    </header>\n  );\n};\n","import React, {useState } from \"react\";\nimport \"./Card.scss\";\n\nexport interface ICard {\n  secretId: number;\n  secret: string;\n  date: string;\n  likes: number;\n}\n\nexport const Card: React.FC<ICard> = ({ secretId, secret, date, likes }) => {\n  // Check if secret is already liked (in localStorage)\n  const storedLike = localStorage.getItem(secretId.toString());\n  let alreadyLiked: boolean;\n  if (storedLike === null) {\n    alreadyLiked = false;\n  } else {\n    alreadyLiked = true;\n  }\n\n  const [liked, setLiked] = useState(alreadyLiked);\n  const [localLikes, setLocalLikes] = useState(likes);\n  const dateObject = new Date(date);\n  const shortDate = dateObject\n    .toString()\n    .split(\" \")\n    .slice(1, 4)\n    .join(\" \");\n\n  const handleLike = () => {\n    // Send put request to server.\n    const update = {\n      date_posted: date,\n      likes: !liked ? likes + 1 : likes - 1,\n      secret,\n    };\n\n    fetch(\"https://secrets-backend.herokuapp.com/api/secret/\" + secretId, {\n      body: JSON.stringify(update),\n      headers: new Headers({ \"Content-Type\": \"application/json\" }),\n      method: \"PUT\",\n    });\n\n    // Set current secret's like status in localStorage\n    if (liked) {\n      localStorage.removeItem(secretId.toString());\n    } else {\n      localStorage.setItem(secretId.toString(), \"liked\");\n    }\n\n    setLocalLikes(localLikes + (!liked ? 1 : -1)); // Update shown like count.\n    setLiked(!liked); // Update shown like status\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"card__header\">\n        <div className=\"card__date\">{shortDate}</div>\n        <div className=\"card__likes\">\n          {localLikes}\n          <img alt=\"like\"\n            className={liked ? \"card__like liked\" : \"card__like\"}\n            src=\"assets/img/like.svg\"\n            onClick={handleLike}\n          />\n        </div>\n      </div>\n      <div className=\"card__secret\">{secret}</div>\n    </div>\n  );\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport './Secrets.scss';\nimport { Card } from './Card';\n\nexport const Secrets: React.FC = () => {\n  const [secrets, setSecrets] = useState([] as JSX.Element[]);\n  const [secretsPage, setSecretsPage] = useState(0);\n  const [intersecting, setIntersecting] = useState(false);\n  const sentinel = useRef(null);\n\n  const addSecrets = () => {\n    const ac = new AbortController();\n    const sig = ac.signal;\n    const response = fetch(\"https://secrets-backend.herokuapp.com/api/secrets/\" + secretsPage, { signal: sig });\n    response\n      .then((result) => result.json())\n      .then((json) => json.map(\n        (secret: any) => (<Card key={secret.id}\n          secretId={secret.id}\n          secret={secret.secret}\n          date={secret.date_posted}\n          likes={secret.likes} />)))\n      .then((cards: any) => { setSecrets(secrets.concat(cards)); })\n      .catch(() => {});\n\n    setSecretsPage(secretsPage + 1);\n    return () => ac.abort();\n  };\n\n  // Create and attach observer once on mount.\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => setIntersecting(entry.isIntersecting),\n      { threshold: [0, 0.25, 0.75, 1] });\n    const s = sentinel.current;\n    if (s) {\n      observer.observe(s);\n    }\n    return () => {\n      // let s = sentinel.current;\n      if (s) {\n        observer.unobserve(s);\n      }\n    };\n  }, []);\n\n  useEffect(addSecrets, [intersecting]);\n\n  return (\n    <>\n      <div className=\"secrets\">\n        {secrets}\n      </div >\n      <div ref={sentinel} className=\"sentinel\"></div>\n    </>\n  );\n}\n","import \"./Modal.scss\";\nimport \"./ShareModal.scss\";\nimport React, { useState, useEffect } from \"react\";\nimport { ModalType } from \"./App\";\n\nexport interface IModal {\n  visible: boolean;\n  closeHandler: (t: ModalType | null) => void;\n}\n\nexport const ShareModal: React.FC<IModal> = ({ visible, closeHandler }) => {\n  const [secret, setSecret] = useState(\"\");\n  const [submitted, setSubmitted] = useState(false);\n\n  // When turned visible (visible changes and is set to true)\n  // reset submitted to false.\n  useEffect(() => { if (visible) { setSubmitted(false); } }, [visible]);\n\n  const handleChange = (e: any) => {\n    setSecret(e.target.value);\n  };\n\n  const handleSubmit = (e: any) => {\n    const content = e.target.querySelector(\".shareform__textarea\").value;\n    const body = {\n      date_posted: (new Date(Date.now())).toISOString(),\n      likes: 0,\n      secret: content,\n    };\n\n    fetch(\"https://secrets-backend.herokuapp.com/api/secrets\", {\n      body: JSON.stringify(body),\n      headers: (new Headers({ \"Content-Type\": \"application/json\" })),\n      method: \"POST\",\n    });\n\n    setSubmitted(true);\n    e.preventDefault();\n  };\n\n  return (\n    <>\n      <div className={visible ? \"share-modal modal visible\" : \"share-modal modal\"} >\n        <button className=\"modal__close\" onClick={() => {\n          closeHandler(null);\n          setSecret(\"\");\n        }}>\n<img aria-label=\"close\"\n          src=\"assets/img/close.svg\"\n          width=\"25px\"\n          alt=\"close\" />\n        </button>\n        {(!submitted)\n          ? (\n            <>\n              <div className=\"modal__title\">Share a secret</div>\n              <div className=\"modal__content\">\n                <form onSubmit={handleSubmit} className=\"shareform\">\n                  <textarea onChange={handleChange}\n                    value={secret}\n                    className=\"shareform__textarea\"\n                    placeholder=\"Share your secret.\" />\n                  <div>\n                    <button\n                      type=\"button\"\n                      className=\"shareform__button shareform__clear\"\n                      onClick={() => setSecret(\"\")}> Clear </button>\n                    <input type=\"submit\"\n                      value=\"Share\"\n                      className=\"shareform__button shareform__submit\" />\n                  </div>\n                </form>\n              </div>\n            </>)\n          : (\n            <div className=\"shareform__success\">\n              <img src=\"/assets/img/icon--checkmark.svg\"\n                   width=\"50px\"\n                   className=\"shareform__success-icon\"\n                   alt=\"Submitted\" />\n                Thank you for sharing your secret!\n                 It should appear on the page shortly.\n            </div>)}\n      </div >\n\n      <div className=\"dimmer\"></div>\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}